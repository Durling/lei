'use strict';

const hrcaseModule = require(rootPath.concat("/module/<%=table%>Module.js"));
const logger = log4js.getLogger('system');

exports.select = Promise.coroutine(function* (req,res,next) {
    let conn;
    try {
        conn = yield util.getConnect();
        let result = yield hrcaseModule.select(conn,req.query);
        return res.json(util.success( {data:result} ));
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } finally {
        conn.release();
    }
});

exports.get = Promise.coroutine(function* (req,res,next) {
    let conn;
    try {
        conn = yield util.getConnect();
        let result = yield hrcaseModule.get(conn,req.params);
        return res.json(util.success( {data:result} ));
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } finally {
        conn.release();
    }
});

exports.add = Promise.coroutine(function* (req,res,next) {
    let conn;
    try {
        conn = yield util.getConnect();
        yield hrcaseModule.add(conn,req.body);
        return res.json(config.message.success);
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } finally {
        conn.release();
    }
});

exports.update = Promise.coroutine(function* (req,res,next) {
    let conn;
    try {
        conn = yield util.getConnect();
        yield hrcaseModule.update(conn,req.body,req.params);
        return res.json(config.message.success);
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } finally {
        conn.release();
    }
});

exports.delete = Promise.coroutine(function* (req,res,next) {
    let conn;
    try {
        conn = yield util.getConnect();
        yield hrcaseModule.delete(conn,req.params);
        return res.json(config.message.success);
    } catch (error) {
        logger.error(error.stack);
        return res.json(config.message.error);
    } finally {
        conn.release();
    }
});